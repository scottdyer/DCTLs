// Slinky DCTL


__DEVICE__ float2 add(float2 A, float2 B)
{
float2 C;
C.x = A.x + B.x;
C.y = A.y + B.y;
return C;
}

__DEVICE__ float length(float2 A)
{
float B = _sqrtf(A.x * A.x + A.y * A.y);
return B;
}

__DEVICE__ float3 multi(float3 A, float B)
{
float3 C;
C.x = A.x * B;
C.y = A.y * B;
C.z = A.z * B;
return C;
}

__DEVICE__ float3 transform(int p_Width, int p_Height, int p_X, int p_Y, __TEXTURE__ p_TexR, __TEXTURE__ p_TexG, __TEXTURE__ p_TexB)
{ 

//float iTime = _tex2D(p_TexR, 500, 500) / 24.0f;
float iTime = _tex2D(p_TexR, 500, 500) * 10.0f;
float X = (float)p_X + 1.0f;
float Y = (float)(p_Height - p_Y) + 1.0f;
float2 resolution = make_float2((float)p_Width, (float)p_Height);
    
float2 p;
p.x = (X * 2.0f - resolution.x) / _fminf(resolution.x, resolution.y);
p.y = (Y * 2.0f - resolution.y) / _fminf(resolution.x, resolution.y);
float3 destColor = make_float3(1.0f, 0.3f, 0.7f);
float f = 0.0f;
for(float i = 0.0f; i < 40.0f; i++){
float s = (_sinf(iTime + i * 0.628318f / 8.0f) *  0.5f);
float c = _sinf(_cosf(iTime + i * 0.628318f / 2.0f) * _sinf(iTime * 0.5f));
f += (0.0025f / _fabs(length(add(p, make_float2(c, s))) - 0.5f));
}
    
destColor = multi(destColor, f);

return destColor;
 
}
